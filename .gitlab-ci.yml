# Pipeline variables
variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=.m2/repository --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache policy - Share target folders between jobs - Note that key is related to a commit and is purged automatically after pipeline execution
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - $CI_PROJECT_DIR/.m2/repository/**/*
    - $CI_PROJECT_DIR/target/**/*

default:
  image: maven:3.6.0-jdk-11
  before_script:
    - apt update && apt install -y gettext-base
    - envsubst '${MVN_GROUP} ${MVN_RELEASE} ${MVN_SNAPSHOTS}' < pom.xml > pom.subst && mv -f pom.subst pom.xml

# Stages definition
stages:
  - build
  - test
  - docker-build

# Build job with maven plugin execution policies define in parent pom
sbapi:build:
  script:
    - sed -i "s/storage.access.key=~/storage.access.key=${OSU_ACCESS_KEY}/g" src/main/resources/application-dev.properties
    - sed -i "s/storage.secret.key=~/storage.secret.key=${OSU_SECRET_KEY}/g" src/main/resources/application-dev.properties
    - sh ./mvnw $MAVEN_CLI_OPTS -U package
  stage: build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/target/*.jar

# Sonar code quality analysis - note a full test coverage report through a jacoco.exec merged file in base project folder
sbapi:sonar:
  stage: test
  dependencies:
    - sbapi:build
  only:
    - develop
  script:
    - >
      mvn sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.projectKey=$CI_SONAR_PROJECT_KEY_DEVELOP
      -Dsonar.projectName=$CI_SONAR_PROJECT_KEY_DEVELOP
  allow_failure: true

# On master, do not use branch parameter
sbapi:sonar:master:
  stage: test
  dependencies:
    - sbapi:build
  only:
    - master
  script:
    - >
      mvn sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.projectKey=$CI_SONAR_PROJECT_KEY_MASTER
      -Dsonar.projectName=$CI_SONAR_PROJECT_KEY_MASTER

docker-build:
  image: docker:stable
  stage: docker-build
  only:
    - develop
    - sp4d
  services:
    - docker:18-dind
  script:
    - _tmpTag="$(date "+%Y%m%d%H%M")"_"$CI_COMMIT_SHORT_SHA"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE":"$_tmpTag" .
    - docker tag "$CI_REGISTRY_IMAGE":"$_tmpTag" "$CI_REGISTRY_IMAGE":latest
    - docker push "$CI_REGISTRY_IMAGE":"$_tmpTag"
    - docker push "$CI_REGISTRY_IMAGE":latest
